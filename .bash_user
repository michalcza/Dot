# CUSTOM COMMAND LINE PROMPT THAT SHOWS STATUS IF GIT IN PWD
# ADD TIMESTAMP TO BASH HISTORY
# FIRST MAKE SURE TO ADD THE FOLLOWING TEST TO THE BOTTOM OF YOUR ~/.bashrc FILE
# REMOVE THE COMMENT MARKS WHEN ADDING TEST TO ~./bashrc
# if [ -f ~/.bash_user ]; then
#        . ~/.bash_user
# fi

# ADD TIMESTAMP TO BASH HISTORY
export HISTTIMEFORMAT="%y/%m/%d %T - "

# CUSTOM COMMAND PROMPT
# EXAMPLE OF WHAT PROMPT WILL LOOK LIKE
# Wed Sep 12 17:09 user@host:~/dir [master]$
# Created by http://ezprompt.net/
# GET CURRENT BRANCH IN GIT REPO
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# GET CURRENT STATUS OF GIT REPO
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

# ORGANIZE AND PRESENT TERMINAL PROMPT
export PS1="\[\e[32m\]\d\[\e[m\]\[\e[32m\] \[\e[m\]\[\e[32m\]\A\[\e[m\] \[\e[32m\]\u\[\e[m\]\[\e[32m\]@\[\e[m\]\[\e[32m\]\h\[\e[m\]\[\e[37m\]:\[\e[m\]\[\e[37m\]\w\[\e[m\] \[\e[41m\]\`parse_git_branch\`\[\e[m\]\\$ "
